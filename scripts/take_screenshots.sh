#!/bin/bash
# üì∑ Script automatique de prise de captures d'√©cran JeuTaime
# Usage: ./scripts/take_screenshots.sh

set -e

# Configuration
SCREENSHOT_DIR="assets/screenshots"
DATE=$(date +%Y%m%d_%H%M%S)
PROJECT_NAME="jeutaime"

# Couleurs pour les logs
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

echo -e "${BLUE}üì∑ JeuTaime - Prise de captures d'√©cran automatique${NC}"
echo -e "${BLUE}=================================================${NC}"

# V√©rifier que les dossiers existent
if [ ! -d "$SCREENSHOT_DIR" ]; then
    echo -e "${YELLOW}üìÅ Cr√©ation du dossier screenshots...${NC}"
    mkdir -p "$SCREENSHOT_DIR"/{mobile,web,features}/{ios,android}
fi

# Fonction de capture iOS
capture_ios() {
    echo -e "${GREEN}üì± V√©rification du simulateur iOS...${NC}"
    
    if xcrun simctl list devices | grep -q "Booted"; then
        DEVICE_INFO=$(xcrun simctl list devices | grep "Booted" | head -1)
        echo -e "${GREEN}‚úÖ Simulateur d√©tect√©: $DEVICE_INFO${NC}"
        
        # Capture √©cran d'accueil
        echo -e "${GREEN}üì∏ Capture √©cran d'accueil iOS...${NC}"
        xcrun simctl io booted screenshot "$SCREENSHOT_DIR/mobile/ios_home_$DATE.png"
        
        # Capturer la status bar proprement
        xcrun simctl status_bar booted override --time "9:41" --dataNetwork "wifi" --wifiMode active --batteryState charged --batteryLevel 100
        
        echo -e "${GREEN}‚úÖ Capture iOS termin√©e${NC}"
        return 0
    else
        echo -e "${RED}‚ùå Aucun simulateur iOS d√©marr√©${NC}"
        echo -e "${YELLOW}üí° D√©marrez un simulateur avec: open -a Simulator${NC}"
        return 1
    fi
}

# Fonction de capture Android
capture_android() {
    echo -e "${GREEN}ü§ñ V√©rification de l'√©mulateur Android...${NC}"
    
    if adb devices | grep -q "emulator"; then
        DEVICE_INFO=$(adb devices | grep "emulator" | head -1)
        echo -e "${GREEN}‚úÖ √âmulateur d√©tect√©: $DEVICE_INFO${NC}"
        
        # Capture √©cran d'accueil
        echo -e "${GREEN}üì∏ Capture √©cran d'accueil Android...${NC}"
        adb exec-out screencap -p > "$SCREENSHOT_DIR/mobile/android_home_$DATE.png"
        
        echo -e "${GREEN}‚úÖ Capture Android termin√©e${NC}"
        return 0
    else
        echo -e "${RED}‚ùå Aucun √©mulateur Android d√©tect√©${NC}"
        echo -e "${YELLOW}üí° D√©marrez un √©mulateur avec: flutter emulators --launch <emulator_id>${NC}"
        return 1
    fi
}

# Fonction de capture web
capture_web() {
    echo -e "${GREEN}üåê Capture web (n√©cessite interaction manuelle)...${NC}"
    echo -e "${YELLOW}üí° Instructions:${NC}"
    echo -e "${YELLOW}   1. Ouvrez Chrome et allez sur localhost:xxxxx${NC}"
    echo -e "${YELLOW}   2. F12 ‚Üí Mode responsive ‚Üí Choisir iPhone 12${NC}"
    echo -e "${YELLOW}   3. Ctrl+Shift+P ‚Üí 'Capture screenshot'${NC}"
    echo -e "${YELLOW}   4. Sauvegardez dans: $SCREENSHOT_DIR/web/${NC}"
}

# Fonction principale
main() {
    echo -e "${BLUE}üöÄ D√©marrage des captures...${NC}"
    echo ""
    
    ios_success=false
    android_success=false
    
    # Capturer iOS si disponible
    if capture_ios; then
        ios_success=true
    fi
    
    echo ""
    
    # Capturer Android si disponible
    if capture_android; then
        android_success=true
    fi
    
    echo ""
    
    # Instructions pour le web
    capture_web
    
    echo ""
    echo -e "${BLUE}üìä R√©sum√© des captures:${NC}"
    echo -e "${BLUE}======================${NC}"
    
    if $ios_success; then
        echo -e "${GREEN}‚úÖ iOS: Capture r√©ussie${NC}"
    else
        echo -e "${RED}‚ùå iOS: √âchec ou non disponible${NC}"
    fi
    
    if $android_success; then
        echo -e "${GREEN}‚úÖ Android: Capture r√©ussie${NC}"
    else
        echo -e "${RED}‚ùå Android: √âchec ou non disponible${NC}"
    fi
    
    echo -e "${YELLOW}‚ö†Ô∏è  Web: Capture manuelle requise${NC}"
    
    echo ""
    echo -e "${BLUE}üìÅ Captures sauvegard√©es dans: $SCREENSHOT_DIR${NC}"
    
    # Lister les fichiers cr√©√©s
    if ls "$SCREENSHOT_DIR"/mobile/*_"$DATE".png 1> /dev/null 2>&1; then
        echo -e "${GREEN}üì∏ Nouveaux fichiers:${NC}"
        ls -la "$SCREENSHOT_DIR"/mobile/*_"$DATE".png
    fi
    
    echo ""
    echo -e "${GREEN}üéâ Script termin√© !${NC}"
}

# V√©rifications pr√©liminaires
check_requirements() {
    echo -e "${BLUE}üîç V√©rification des pr√©requis...${NC}"
    
    # V√©rifier que Flutter est install√©
    if ! command -v flutter &> /dev/null; then
        echo -e "${RED}‚ùå Flutter n'est pas install√© ou pas dans le PATH${NC}"
        exit 1
    fi
    
    # V√©rifier qu'on est dans un projet Flutter
    if [ ! -f "pubspec.yaml" ]; then
        echo -e "${RED}‚ùå Ce script doit √™tre ex√©cut√© √† la racine d'un projet Flutter${NC}"
        exit 1
    fi
    
    echo -e "${GREEN}‚úÖ Pr√©requis valid√©s${NC}"
    echo ""
}

# Point d'entr√©e
check_requirements
main

echo ""
echo -e "${BLUE}üí° Prochaines √©tapes:${NC}"
echo -e "${BLUE}- Organisez les captures dans les sous-dossiers par fonctionnalit√©${NC}"
echo -e "${BLUE}- Mettez √† jour le README.md avec les nouveaux screenshots${NC}"
echo -e "${BLUE}- Utilisez le guide dans docs/SCREENSHOT_GUIDE.md pour plus d'options${NC}"